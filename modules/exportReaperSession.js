export default exportReaperProject;class Reaper{constructor(){this.tracks=[],this.markers=[]}addTrack(e){let t=new Track(e);return this.tracks.push(t),t}getTrackByName(e){return this.tracks.find(t=>t.name==e)}addMarker(e){this.markers.push(e)}rppChunk(){let e=['<REAPER_PROJECT 0.1 "5.99/x64" '+Date.now()];return this.markers.forEach((t,r)=>{e.push(`  MARKER ${r+1} ${t.position} "rmv: ${t.label}" 0 16777466 1 R`)}),this.tracks.forEach(t=>{e.push(t.rppChunk())}),e.push(">"),e.join("\n")}}class Track{constructor(e){this.name=e,this.items=[]}addItem(e){let t={POSITION:e.position,LENGTH:e.takeLength,NAME:e.takeName,SOFFS:e.sourceOffset,sourceType:getSourceType(e.source),sourcePath:e.source};return this.items.push(t),t}rppChunk(){let e=[`  <TRACK\n    NAME "${this.name}"`];return this.items.forEach(t=>{e.push(`    <ITEM\n      POSITION ${t.POSITION}\n      LENGTH ${t.LENGTH}\n      NAME ${t.NAME}\n      SOFFS ${t.SOFFS}\n      <SOURCE ${t.sourceType}\n        FILE "${t.sourcePath}"\n      >\n    >`)}),e.push("  >"),e.join("\n")}}function getSourceType(e){if("string"!=typeof e)throw"filepath is not a string";switch(e.match(/\.(\w+)$/)[1].toLowerCase()){case"mp3":return"MP3";case"wav":return"WAVE"}}function exportReaperProject(e,t){let r=0,a=new Reaper;return e.filter(e=>!e.striked).forEach(e=>{(a.getTrackByName(e.name)||a.addTrack(e.name)).addItem({source:t,sourceOffset:e.start,takeName:e.name,position:r,takeLength:e.end-e.start});let s=0;e.toRemove.forEach(e=>{a.addMarker({position:r+s,label:e}),s++}),r+=e.end-e.start}),a.rppChunk()}