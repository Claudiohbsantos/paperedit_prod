"use strict";import*as utils from"../modules/utils.js";import player from"../modules/player.js";import paperedit from"../modules/transcript.js";import{exportPlainTextFile,exportAudioFile}from"../modules/exporter.js";import exportRPP from"../modules/exportReaperSession.js";import{Component}from"./component.js";class ExportMenu extends Component{constructor(){super(document.getElementById("export-menu")),this.attachListeners()}attachListeners(){document.getElementById("btn-expppcut").addEventListener("click",()=>{exportPapercut(),this.hide()}),document.getElementById("btn-expmp3").addEventListener("click",()=>{exportMp3(),this.hide()}),document.getElementById("btn-expwav").addEventListener("click",()=>{exportWav(),this.hide()}),document.getElementById("btn-exprpp").addEventListener("click",()=>{exportRpp(),this.hide()}),document.getElementById("btn-expcsv").addEventListener("click",()=>{exportCsv(),this.hide()}),document.getElementById("btn-expjson").addEventListener("click",()=>{exportJson(),this.hide()})}}let singleton=new ExportMenu;export default singleton;function exportWav(){exportAudioFile("wavencoder-worker.js",".wav")}function exportMp3(){exportAudioFile("mp3encoder-worker.js",".mp3")}function exportRpp(){if(0==player.duration)return void utils.showWarning("Reaper project would be empty. Make sure you loaded an audio file into PaperEdit");if(paperedit.getEditTime()<=0)return void utils.showWarning("Reaper project would be empty. Make sure there are nonstriked sections to be exported");let e=paperedit.getTranscript(),t=player.filename;exportPlainTextFile(exportRPP(e,t),".rpp")}function exportPapercut(){let e=paperedit.getPapercut();exportPlainTextFile(e,".ppcut")}function exportJson(){let e=paperedit.getTranscript();exportPlainTextFile(JSON.stringify(e),".json")}function exportCsv(){let e=convertTranscriptToCSV(paperedit.getTranscript());exportPlainTextFile(e,".csv")}function convertTranscriptToCSV(e){let t=["Speaker","Start","End","Removed","Section","Lines to remove (; delimited)"].join(","),r=e.map(e=>[e.name,e.start,e.end,e.striked?"TRUE":"FALSE",`"${e.line.replace(/"/g,"'")}"`,`"${e.toRemove.join(";").replace(/"/g,"'")}"`].join(","));return r.unshift(t),r.join("\n")}